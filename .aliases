alias sb='source ~/.bashrc && echo source bash: ok'
alias cdv-and-v='cd ~/Documents/V-and-V/'
alias cdjenkins='cd ~/Documents/Jenkins'

alias submodule_status='git submodule foreach git status'
alias submodule_clean='git submodule foreach git clean -xdf'
alias mkcdir='mkdir build && cd build'

function list_modified_file() {
    sed 's|\(modified: \)\(.*\)|\2|g'
}

alias code_modified='code $(git st | grep modified | list_modified_file)'

function mergedBranches() {
    grep -vE "master|main" >/tmp/merged-branches
}

alias delete_local_branch_merge='git branch --merged | mergedBranches && vi /tmp/merged-branches && xargs git branch -d </tmp/merged-branches'

git config --global alias.st status
git config --global alias.br branch
git config --global alias.co checkout

pull_submodule_master_main() {
    listOfBranch=("master" "main")
    listOfSubmodule=($(git submodule | sed -e 's|[^\w][^ ]* \(.*\) .*|\1|g'))
    rootSubmodulePath=$(pwd)
    echo ${listOfSubmodule[@]}
    for subs in ${listOfSubmodule[@]}; do
        echo "*************************************"
        echo "Entering into ${subs}" && cd "${subs}"
        for branchName in ${listOfBranch[@]}; do
            git show-ref --verify --quiet refs/heads/${branchName}
            if [ $? == "0" ]; then
                git checkout -q ${branchName}
                git pull
            fi
        done
        echo "Exit from ${subs} and go to $(cd -)"
        cd "${rootSubmodulePath}"
        echo "*************************************"
    done
}

#ROS aliases
alias cdros='cd ~/ros2_ws'
alias ros_build='. ros_build.sh'
alias ros_clean='./clean.sh'

alias antora='npx antora'

force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
        # We have color support; assume it's compliant with Ecma-48
        # (ISO/IEC-6429). (Lack of such support is extremely rare, and such
        # a case would tend to support setf rather than setaf.)
        color_prompt=yes
    else
        color_prompt=
    fi
fi

git_branch() {
    git branch 2>/dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1)/'
}

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\] \[\033[00;32m\]$(git_branch)\[\033[00m\]\$\n'
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w \[\033[00;32m\]$(git_branch)\[\033[00m\]\$\n'
fi
unset color_prompt force_color_prompt